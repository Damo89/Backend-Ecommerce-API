openapi: 3.0.0
info:
  title: E-commerce API
  version: 1.0.0
  description: API documentation for the E-commerce platform
servers:
  - url: http://localhost:3000
    description: Development server
paths:
  /api/login:
    post:
      summary: Login user
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Login successful
  /api/profile:
    get:
      summary: Get authenticated user profile
      tags:
        - Auth
      responses:
        '200':
          description: User profile returned
        '401':
          description: Unauthorized
  /api/logout:
    post:
      summary: Logout current user
      tags:
        - Auth
      responses:
        '200':
          description: Logged out successfully
  /api/carts/{userId}:
    get:
      summary: Get all cart items for a user
      tags:
        - Cart
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Cart items
  /api/carts:
    post:
      summary: Add product to cart
      tags:
        - Cart
      requestBody:
        content:
          application/json:
            schema:
              required:
                - user_id
                - product_id
                - quantity
              properties:
                user_id:
                  type: integer
                product_id:
                  type: integer
                quantity:
                  type: integer
      responses:
        '201':
          description: Product added to cart
  /api/carts/{cartId}:
    put:
      summary: Update quantity of a cart item
      tags:
        - Cart
      parameters:
        - in: path
          name: cartId
          required: true
          schema:
            type: integer
          description: ID of the cart item to update
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - quantity
              properties:
                quantity:
                  type: integer
      responses:
        '200':
          description: Cart item updated successfully
        '404':
          description: Cart item not found
        '500':
          description: Server error
    delete:
      summary: Remove an item from the cart
      tags:
        - Cart
      parameters:
        - in: path
          name: cartId
          required: true
          schema:
            type: integer
          description: ID of the cart item to delete
      responses:
        '200':
          description: Item removed from cart
        '404':
          description: Cart item not found
        '500':
          description: Server error
  /api/carts/{userId}/checkout:
    post:
      summary: Checkout cart and create order
      tags:
        - Checkout
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              properties:
                paymentDetails:
                  type: object
                  properties:
                    cardNumber:
                      type: string
      responses:
        '201':
          description: Checkout successful
  /api/orders:
    get:
      summary: Get all orders
      tags:
        - Orders
      responses:
        '200':
          description: List of orders
    post:
      summary: Create a new order
      tags:
        - Orders
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - user_id
                - total
              properties:
                user_id:
                  type: integer
                total:
                  type: number
                status:
                  type: string
                  default: pending
      responses:
        '201':
          description: Order created successfully
        '400':
          description: Missing required fields
        '500':
          description: Server error
  /api/orders/user/{user_id}/{order_id}:
    get:
      summary: Get specific order details for a user
      tags:
        - Orders
      parameters:
        - in: path
          name: user_id
          required: true
          schema:
            type: integer
          description: ID of the user
        - in: path
          name: order_id
          required: true
          schema:
            type: integer
          description: ID of the order
      responses:
        '200':
          description: Order details returned successfully
        '404':
          description: Order not found for this user
        '500':
          description: Server error
  /api/orders/user/{user_id}:
    get:
      summary: Get all orders by user ID
      tags:
        - Orders
      parameters:
        - in: path
          name: user_id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Orders by user
  /api/orders/{id}:
    get:
      summary: Get order by ID
      tags:
        - Orders
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Order found
    put:
      summary: Update an order
      tags:
        - Orders
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: ID of the order to update
      requestBody:
        content:
          application/json:
            schema:
              properties:
                user_id:
                  type: integer
                total:
                  type: number
                status:
                  type: string
      responses:
        '200':
          description: Order updated successfully
        '404':
          description: Order not found
        '500':
          description: Server error
    delete:
      summary: Delete an order
      tags:
        - Orders
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: ID of the order to delete
      responses:
        '200':
          description: Order deleted successfully
        '404':
          description: Order not found
        '500':
          description: Server error
  /api/products:
    get:
      summary: Get all products
      tags:
        - Products
      responses:
        '200':
          description: List of products
    post:
      summary: Create a new product
      tags:
        - Products
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - description
                - price
                - stock
              properties:
                name:
                  type: string
                description:
                  type: string
                price:
                  type: number
                stock:
                  type: integer
      responses:
        '201':
          description: Product created
  /api/products/{id}:
    get:
      summary: Get product by ID
      tags:
        - Products
      parameters:
        - name: id
          in: path
          required: true
          description: Product ID
          schema:
            type: integer
      responses:
        '200':
          description: Product found
        '404':
          description: Product not found
    put:
      summary: Update a product
      tags:
        - Products
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                name:
                  type: string
                description:
                  type: string
                price:
                  type: number
                stock:
                  type: integer
      responses:
        '200':
          description: Product updated
        '404':
          description: Product not found
    delete:
      summary: Delete a product
      tags:
        - Products
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Product deleted
        '404':
          description: Product not found
  /api/users:
    get:
      summary: Get all users
      tags:
        - Users
      responses:
        '200':
          description: List of users
    post:
      summary: Register a new user
      tags:
        - Users
      requestBody:
        content:
          application/json:
            schema:
              required:
                - email
                - password
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        '201':
          description: User created
  /api/users/{id}:
    get:
      summary: Get user by ID
      tags:
        - Users
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: User data
        '404':
          description: User not found
    put:
      summary: Update a user
      tags:
        - Users
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: User updated
        '404':
          description: User not found
    delete:
      summary: Delete a user
      tags:
        - Users
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: User deleted
        '404':
          description: User not found
components: {}
tags: []
